/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaclientchattingapplication;

import DatabaseConnection.DataBaseConfig;
import com.sun.javafx.scene.layout.region.Margins;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.LayoutManager;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.SSLSocket;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import myclasses.ContentType;
import myclasses.Message;
import myclasses.ReceiverType;

/**
 *
 * @author TOSHIBA
 */
public class ClientMainWindow extends javax.swing.JFrame {

    /**
     * Creates new form ClientMainWindow
     */
    private String UserName;
    private int UserID;
    private Socket client;
    private String ClientName;
    private InetAddress IP;
    private InetAddress myIPAddress;
    private String Host;
    private int PORT = 1024;
    private ObjectInputStream reader;
    private ObjectOutputStream writer;
    readChatFromLocal rcf=null;
    private String currentUser="0";//this variable to know how is chating now
    String[] userslist;
    String my="0";//this variable to store my id
    public ClientMainWindow(String host) {
       
       // setVisible(true);
      //  setLocationRelativeTo(null);
      //  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      //  setResizable(false);
        Host=host;
        initComponents();
        personalMessagePlacePanel.setLayout(new BoxLayout(personalMessagePlacePanel,BoxLayout.Y_AXIS));
        System.out.println("Profile : " + UserName);
        try {
            // create the connection object to connect to server with the following port and host            
            client = new Socket(host, PORT);
            try {
            Message msg=new Message(my, "Server",my, ContentType.USERNAME, ReceiverType.SERVER);
                writer= new ObjectOutputStream(client.getOutputStream());
                writer.writeObject(msg);
                System.out.println("id has sent");
                new reading().start();
            } catch (IOException e) {
                    Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, e);
        
                JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
            }
            catch(Exception e){
                System.out.println(e.getMessage());
                    Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, e);
        
            }

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Connection Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new javax.swing.JTabbedPane();
        allUserPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allUsersList = new javax.swing.JList<>();
        friendNameLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        personalMessageTextField = new javax.swing.JTextField();
        personalMessageSendButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        personalMessagePlacePanel = new javax.swing.JPanel();
        allGroupPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        groupNametxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        allGroupsList = new javax.swing.JList<>();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        groupMessageTextField = new javax.swing.JTextField();
        groupMessageSendButton = new javax.swing.JButton();
        userNamePlaceLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        mainTabbedPane.setDoubleBuffered(true);

        allUserPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        allUsersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        allUsersList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allUsersListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allUsersList);

        allUserPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 216, 465));

        friendNameLabel.setText("Friend Name");
        allUserPanel.add(friendNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        allUserPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(232, 11, -1, 456));
        allUserPanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 380, -1));

        personalMessageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalMessageTextFieldActionPerformed(evt);
            }
        });
        allUserPanel.add(personalMessageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 310, 30));

        personalMessageSendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ic_sent.png"))); // NOI18N
        personalMessageSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalMessageSendButtonActionPerformed(evt);
            }
        });
        allUserPanel.add(personalMessageSendButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 450, 40, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/male.png"))); // NOI18N
        allUserPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 50, 40));

        personalMessagePlacePanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout personalMessagePlacePanelLayout = new javax.swing.GroupLayout(personalMessagePlacePanel);
        personalMessagePlacePanel.setLayout(personalMessagePlacePanelLayout);
        personalMessagePlacePanelLayout.setHorizontalGroup(
            personalMessagePlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        personalMessagePlacePanelLayout.setVerticalGroup(
            personalMessagePlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(personalMessagePlacePanel);

        allUserPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 380, 400));

        mainTabbedPane.addTab("Users                                                               ", allUserPanel);

        allGroupPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Add");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        allGroupPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 60, -1));
        allGroupPanel.add(groupNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, -1));

        allGroupsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allGroupsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(allGroupsList);

        allGroupPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 45, 198, 430));
        allGroupPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 610, -1));

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        allGroupPanel.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, -1, 450));

        jLabel2.setText("jLabel2");
        allGroupPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));
        allGroupPanel.add(groupMessageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 450, 340, -1));

        groupMessageSendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ic_sent.png"))); // NOI18N
        groupMessageSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupMessageSendButtonActionPerformed(evt);
            }
        });
        allGroupPanel.add(groupMessageSendButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 450, 40, 20));

        mainTabbedPane.addTab("Groups                                                         ", allGroupPanel);

        getContentPane().add(mainTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 66, -1, 510));

        userNamePlaceLabel.setText("Username");
        getContentPane().add(userNamePlaceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, 20));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 620, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/male.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personalMessageSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalMessageSendButtonActionPerformed
       //when user click send button to send message
        Message msg=new Message(my,currentUser,personalMessageTextField.getText(), ContentType.TEXT, ReceiverType.PERSONAL);
         new DataBaseConfig().update("INSERT INTO MESSAGES(CONTENT,SENDER_ID,RECEIVER_ID) VALUES('"+msg.getContent()+"','"+msg.getSender()+"','"+msg.getReceiver()+"')");
                JPanel pan=new JPanel();
                pan.setBackground(Color.WHITE);
                FlowLayout fl=new FlowLayout();
                JButton btn=new JButton(msg.getContent());
                btn.setBackground(new java.awt.Color(0, 214, 51));
                btn.setForeground(Color.WHITE);
                 pan.setMaximumSize(new Dimension(375, 35));
                fl.setAlignment(FlowLayout.RIGHT);
                pan.setLayout(fl);
                pan.add(btn);
                personalMessagePlacePanel.add(pan);
                personalMessagePlacePanel.add(Box.createVerticalStrut(8));  
                personalMessagePlacePanel.revalidate();
       try {
            writer= new ObjectOutputStream(client.getOutputStream());
            writer.writeObject(msg);
        } catch (IOException ex) {
            Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_personalMessageSendButtonActionPerformed

    private void personalMessageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalMessageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personalMessageTextFieldActionPerformed

    private void allGroupsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allGroupsListMouseClicked
        JOptionPane.showMessageDialog(null,allGroupsList.getSelectedIndex());
    }//GEN-LAST:event_allGroupsListMouseClicked

    private void allUsersListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allUsersListMouseClicked
            personalMessagePlacePanel.removeAll();
            personalMessagePlacePanel.revalidate();//to refresh the panel accepting changes
            personalMessagePlacePanel.repaint();
            int s=  allUsersList.getSelectedIndex();
            friendNameLabel.setText(userslist[s].split(",")[1]);
            JOptionPane.showMessageDialog(null,userslist[s].split(",")[0]);
            currentUser=userslist[s].split(",")[0];//solit string into array to get the word befor ","
            rcf=new readChatFromLocal(currentUser);
            rcf.start();
    }//GEN-LAST:event_allUsersListMouseClicked

    private void groupMessageSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupMessageSendButtonActionPerformed
      
    }//GEN-LAST:event_groupMessageSendButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Message msg=new Message(my,"Server",groupNametxt.getText(), ContentType.GROUP_NAME, ReceiverType.SERVER);
        try {
            writer= new ObjectOutputStream(client.getOutputStream());
            writer.writeObject(msg);
            groupNametxt.setText("");
        } catch (IOException ex) {
            Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       Message msg=new Message(my,"Server","Closing", ContentType.TEXT, ReceiverType.SERVER);
        try {
            writer=new ObjectOutputStream(client.getOutputStream());
            writer.writeObject(msg);
            System.out.println("has closed");
        } catch (IOException ex) {
            Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel allGroupPanel;
    private javax.swing.JList<String> allGroupsList;
    private javax.swing.JPanel allUserPanel;
    private javax.swing.JList<String> allUsersList;
    private javax.swing.JLabel friendNameLabel;
    private javax.swing.JButton groupMessageSendButton;
    private javax.swing.JTextField groupMessageTextField;
    private javax.swing.JTextField groupNametxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JPanel personalMessagePlacePanel;
    private javax.swing.JButton personalMessageSendButton;
    private javax.swing.JTextField personalMessageTextField;
    private javax.swing.JLabel userNamePlaceLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Function that is used to generate a random String for every User this
     * simplify the process of creating user.
     *
     * @return
     */
 //--------------------------MY THREADS-------------------------------
    private class reading extends Thread{
    @Override
    public void run(){
        while(true){
        try {
           reader=new ObjectInputStream(client.getInputStream());
           Message msg=(Message) reader.readObject();
           switch(msg.getReceiverType()){
           case SERVER:
               if(msg.getContentType()==ContentType.USERS)
                   new showOnlineUsers(msg).start();
               else{
                   my=msg.getContent().split(",")[0];
                  userNamePlaceLabel.setText(msg.getContent().split(",")[1]);}
                   break;
           //>>>>>>>>>>>>>>>>>>>>>>>>>>
           case PERSONAL:
               if(msg.getSender().equals(currentUser))
               {
                JPanel pan=new JPanel();
                FlowLayout fl=new FlowLayout();
                JButton btn=new JButton(msg.getContent());
                btn.setForeground(Color.WHITE);
                pan.setMaximumSize(new Dimension(375, 35));
                pan.setLayout(fl);
                pan.setBackground(Color.WHITE);
                fl.setAlignment(FlowLayout.LEFT);
                btn.setBackground(new java.awt.Color(118, 116, 51));
                pan.add(btn);
                personalMessagePlacePanel.add(pan);
                personalMessagePlacePanel.add(Box.createVerticalStrut(8));  
                personalMessagePlacePanel.revalidate();
               }
               new DataBaseConfig().update("INSERT INTO MESSAGES(CONTENT,SENDER_ID,RECEIVER_ID) VALUES('"+msg.getContent()+"','"+msg.getSender()+"','"+msg.getReceiver()+"')");
               break;
           //>>>>>>>>>>>>>>>>>>>>>>>>>>
           case GROUP:
               
            break;
           case GLOBAL:
            new globalMessageProcessing(msg).start();
              break;
           }
        } catch (Exception ex) {
            Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    }   
    }
//...............................................................
 private class globalMessageProcessing extends Thread{
     Message msg;
     public globalMessageProcessing(Message m){
     msg=m;
     }
      @Override
    public void run(){
       switch(msg.getContentType()){
           case GROUP_NAME:
              allGroupsList.add(msg.getContent(),null);
              new DataBaseConfig().update("INSERT INTO GROUPS(GROUP_NAME) VALUES('"+msg.getContent()+"')");
             break;
           
       } 
    
    }
 }  
//.................................................................
 private class showOnlineUsers extends Thread{
     Message msg;
    public showOnlineUsers(Message msg){
        this.msg=msg;
    }
    @Override
    public void run(){
         try {
            userslist= msg.getContent().split(";");
             allUsersList.setListData(userslist);
            } catch (Exception ex) {
             Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
         }
    
    }
 }
//-------------------------------------------------------------
private class readChatFromLocal extends Thread{
    String id;
    public readChatFromLocal(String id){
    this.id=id;
   }
   @Override
    public void run(){
           
     //  while (true) {           
           try {
            DataBaseConfig db=new DataBaseConfig();
            ResultSet rs= db.execute("SELECT * FROM MESSAGES WHERE SENDER_ID IN ('"+id+"','"+my+"') AND RECEIVER_ID IN ('"+id+"','"+my+"') ORDER BY MESSAGE_DATE");
            personalMessagePlacePanel.removeAll();
            personalMessagePlacePanel.validate();
            while (rs.next()) {
                JPanel pan=new JPanel();
                FlowLayout fl=new FlowLayout();
                JButton btn=new JButton(rs.getString("content"));
                btn.setForeground(Color.WHITE);
                pan.setMaximumSize(new Dimension(375, 35));
                if(rs.getString("SENDER_ID").equals(my)){
                fl.setAlignment(FlowLayout.RIGHT);
                btn.setBackground(new java.awt.Color(0, 204, 51));}
                else{
                fl.setAlignment(FlowLayout.LEFT);
                btn.setBackground(new java.awt.Color(212, 55, 51));}
                
                pan.setLayout(fl);
                pan.add(btn);
                personalMessagePlacePanel.add(pan);
                personalMessagePlacePanel.add(Box.createVerticalStrut(8));  
                personalMessagePlacePanel.revalidate();
                personalMessagePlacePanel.repaint();
            }
            }
           catch (SQLException ex) {
            Logger.getLogger(ClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }          
      // }
    
    }


}
   
}
